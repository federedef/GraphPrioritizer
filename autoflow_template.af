calc_similarity_[$nets]){
# Input: Archivo gen-ont bicolumna en /t + Archivo .obo
# Columna 1: gen	Columna 2: Elementos de ontologia separados por ";"
# Calculo con linn
# source ~soft_bio_267/initializes/init_ruby # De momento, no podemos usar esto (no esta subido)
#source ~josecordoba/software/initializes/init_semtools_script # Usaremos esto de momento.
source ~federogc/software/initializes/init_minisemtools_script
echo -e "(*)\t$kernel" > tracker
?
semtools.rb -i $input_path/(*) -o ./results.txt -k "HP:" -O $input_path/$ont -s lin -W "M" -S ";" # Pair 
}

%calc_kernel_[$nets]){
# input: Similarity matrix
# Calculate kernel
# Save in binary format ########### semantic_similarity_list(or matrix)
source ~soft_bio_267/initializes/init_netanalyzer
ln -s !calc_similarity_*!/tracker tracker
sed -i '1s/^/colA\tcolB\tcolC\n/' file
#awk 'BEGIN{FS="\t";OFS="\t"}{gsub(/.*:/,"A:",$1);gsub(/.*:/,"B:",$2);print}' !calc_similarity_*!/*semantic_similarity > semantic_similarity
LAYERS='geneA,A:;geneB,B:'
text2binary_matrix.rb semantic_similarity -o semantic_matrix.bin -t pair 
?
NetAnalyzer.rb -i semantic_similarity -l $LAYERS -k $kernel -K ./kernel_matrix.txt # Puede que se pase a binario directamente.
}

%integrate_kernel){
?
script.rb -i `echo !calc_kernel_!/kernel_matrix | tr " " ","`
# cogemos todos los binarios y con todo cargado creamos la matriz completa.
# luego adaptamos.
# luego integramos.
}