calc_similarity){
	resources: -m '60gb' -t '4-00:00:00'
	# Input: Tab file in: paco format for ontologies, pairs format for network.
	# Output: Similarity list
	source ~soft_bio_267/initializes/init_netanalyzer
	source ~soft_bio_267/initializes/init_R
	echo -e "$annotation_sim" > tracker
	similarity_path=`pwd`
	?
	sim_umap.R -i $input_path/input_processed/$annotation -O similarity_matrix_bin -t
	if [ ! -s similarity_matrix_bin ] ; then 
		exit 1
	fi
}

list2matrix_similarity){
	resources: -m '60gb' -t '1-00:00:00'
	source ~soft_bio_267/initializes/init_netanalyzer
	echo -e "$annotation_sim" > tracker
	ln -s calc_similarity)/similarity_matrix_bin
    ln -s calc_similarity)/similarity_matrix_bin.lst
	?
	text2binary_matrix.rb -i calc_similarity)/similarity_matrix_bin -o similarity_matrix_bin -t bin -s > similarity_metrics
	if [ -s similarity_metrics ] ; then 
		awk -v tracker="`cat tracker`" 'BEGIN{FS="\t";OFS="\t"}{gsub(/ - /,"_",$1); gsub(/ /,"_",$0); print tracker,$1,$2}' similarity_metrics >> ../../../similarity_metrics 
	else
		exit 1
	fi
}

filter_similarity){
	resources: -c 8 -m '60gb' -t '5-00:00:00'
	source ~soft_bio_267/initializes/init_R
	source ~soft_bio_267/initializes/init_netanalyzer
	echo -e "$annotation_sim" > tracker
	filter_factor=`grep -P '^$annotation' $net2custom | cut -f 5`
	cp list2matrix_similarity)/similarity_matrix_bin.lst ./similarity_matrix_bin.lst
	export OMP_NUM_THREADS=[cpu]
	if [ $filter_factor == "F" ] ; then
	    ?
		custom_disparity_filter.R -i list2matrix_similarity)/similarity_matrix_bin -o "./" -O similarity_matrix_bin -n list2matrix_similarity)/similarity_matrix_bin.lst -b
		text2binary_matrix.rb -i similarity_matrix_bin -t bin -o similarity_matrix_bin_undo -s > filtered_similarity_metrics
		if [ -s similarity_matrix_bin_undo ] ; then
			rm similarity_matrix_bin_undo
			awk -v tracker="`cat tracker`" 'BEGIN{FS="\t";OFS="\t"}{gsub(/ - /,"_",$1); gsub(/ /,"_",$0); print tracker,$1,$2}' filtered_similarity_metrics >> ../../../filtered_similarity_metrics
		else
			exit 1
		fi
	elif [ $filter_factor == "NF" ] ; then
		cp list2matrix_similarity)/similarity_matrix_bin ./similarity_matrix_bin
        cp list2matrix_similarity)/similarity_matrix_bin.lst ./similarity_matrix_bin.lst
    fi

    if [ ! -s similarity_matrix_bin ] ; then
    	exit 1
    fi
}

calc_kernel_[$kernels_varflow]){
	resources: -c 16 -m '60gb' -t '2-00:00:00'
	# input: Similarity binary matrix
	# output: binary Kernel from similarity matrix + metrics
	source ~soft_bio_267/initializes/init_netanalyzer
	echo -e "$annotation_(*)\t$annotation\t(*)" > tracker
	cp filter_similarity)/similarity_matrix_bin.lst kernel_matrix_bin.lst # To pass the list of node names.
	kern_net_path=`pwd`
	export OMP_NUM_THREADS=[cpu]
	if [ -s ugot_path ] ; then
		rm ugot_path
	fi
	?
	NetAnalyzer.rb -i filter_similarity)/similarity_matrix_bin -f bin -l 'genes' -k (*) -n kernel_matrix_bin.lst -u 'genes' -K ./kernel_matrix_bin
	if [ -s kernel_matrix_bin ] ; then
		echo -e "$annotation_(*)\t$annotation\t(*)\t$kern_net_path" > ugot_path # ../../ugot_path
	else 
  		exit 1
  	fi
}

stats_kernels_[$kernels_varflow]){
	resources: -m '60gb' -t '1-00:00:00'
	source ~soft_bio_267/initializes/init_netanalyzer
	ln -s !calc_kernel_*!/tracker
	?
	text2binary_matrix.rb -i !calc_kernel_*!/kernel_matrix_bin -o kernel_matrix_undo -t bin -s > kernel_metrics
	if [ -s kernel_matrix_undo ] ; then
		rm kernel_matrix_undo
		awk -v tracker="`cat tracker`" 'BEGIN{FS="\t";OFS="\t"}{gsub(/ - /,"_",$1); gsub(/ /,"_",$0); print tracker,$1,$2}' kernel_metrics >> ../../../uncomb_kernel_metrics
	else 
  		exit 1
  	fi
}