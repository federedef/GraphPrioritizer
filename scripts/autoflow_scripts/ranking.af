rank_genes_classic){
	# Input: seed_gens + kernel.
	# Output: rank genes for every gen.
	source ~soft_bio_267/initializes/init_netanalyzer
	. ~soft_bio_267/initializes/init_ruby
	. ~soft_bio_267/initializes/init_R
	export PATH=/mnt/home/users/bio_267_uma/federogc/dev_gems/NetAnalyzer/bin:$PATH
	if [ $method != "classic" ] ; then
		exit 0
	fi
	echo -e "$param1_$kernel\t$param1\t$kernel" > tracker
	ranking_path=`pwd`
	## Defining seed genes
    awk 'BEGIN{OFS="\t";}{print $1,$1}' $control_pos > seed_by_group
	## Obtaining genes of interest
	cat $control_pos $control_neg | aggregate_column_data.rb -i - -x 0 -a 1 > filter
	## Obtaining tags for group-case
	desaggregate_column_data.rb -i $control_pos -x 1 |& awk '{OFS="\t"}{print $1,$2,1}' > tags
	desaggregate_column_data.rb -i $control_neg -x 1 |& awk '{OFS="\t"}{print $1,$2,0}' >> tags
	?
	ranker_gene.rb -k $folder_kernel_path/$input_name -n $folder_kernel_path/$input_name.lst -s seed_by_group -f filter
	# Add tags to ranked_genes_all_candidates.
	add_tags2ranks.rb -i ranked_genes_all_candidates -g 5 -c 0 -t tags -o tagged_ranks.txt
	number_of_genes=`wc -l tagged_ranks.txt | cut -f1 -d " "`

	# Obtaining Metrics And statistical summary
    if [ $number_of_genes -ge 1 ] ; then 
		ROCanalysis.R -i tagged_ranks.txt -s 3 -t 7 -b 10000 -S backupgenes -m ROC -o "preobserved_all_genes" -e -z -R
		sed '1d' preobserved_all_genes_summary | cut -f 3,4 > all_genes_summary
		sed '1d' preobserved_all_genes_measures |  cut -f 2- > all_genes_measures

		if [ -s all_genes_summary ] ; then
			awk -v tracker="`cat tracker`" 'BEGIN{FS="\t";OFS="\t"}{gsub(/ /,"_",$0); print tracker,$1,$2}' \ 
			  all_genes_summary > $output_name_ranked_metrics 
		else 
		  	exit 0
		fi

		if [ -s all_genes_measures ] ; then
			awk -v tracker="`cat tracker`" 'BEGIN{FS="\t";OFS="\t"}{print tracker,$0}' all_genes_measures > $output_name_ranked_measures
		else 
		  	exit 0
		fi

	else 
		exit 0
	fi


}

rank_genes_with_leave_one_out){
	# Input: seed_gens + kernel.
	# Output: rank genes for every gen.
	source ~soft_bio_267/initializes/init_netanalyzer
	. ~soft_bio_267/initializes/init_ruby
	. ~soft_bio_267/initializes/init_R
	export PATH=/mnt/home/users/bio_267_uma/federogc/dev_gems/NetAnalyzer/bin:$PATH
	if [ $method != "leave_one_out" ] ; then
		exit 0
	fi
	echo -e "$param1_$kernel\t$param1\t$kernel" > tracker
	ranking_path=`pwd`
	## Defining seed genes
    cat $control_pos > seed_by_group
	## Obtaining genes of interest
	cat $control_neg > filter
	## Obtaining tags for group-case
	desaggregate_column_data.rb -i $control_pos -x 1 |& awk '{OFS="\t"}{print $1,$2,1}' > tags
	desaggregate_column_data.rb -i $control_neg -x 1 |& awk '{OFS="\t"}{print $1,$2,0}' >> tags
	?
	ranker_gene.rb -k $folder_kernel_path/$input_name -n $folder_kernel_path/$input_name.lst -s seed_by_group -l -f filter
	awk 'BEGIN{FS="\t";OFS="\t"}{gsub(/_[0-9]/,"",$6); print $0}' ranked_genes_all_candidates > processed_ranked_genes
	# Add tags to ranked_genes_all_candidates.
	add_tags2ranks.rb -i processed_ranked_genes -g 5 -c 0 -t tags -o tagged_ranks.txt
	number_of_genes=`wc -l tagged_ranks.txt | cut -f1 -d " "`

	# Obtaining Metrics And statistical summary
    if [ $number_of_genes -ge 1 ] ; then 
		ROCanalysis.R -i tagged_ranks.txt -s 3 -t 7 -b 1000 -S backupgenes -m ROC -o "preobserved_all_genes" -e -z -R
		sed '1d' preobserved_all_genes_summary | cut -f 3,4 > all_genes_summary
		sed '1d' preobserved_all_genes_measures |  cut -f 2- > all_genes_measures

		if [ -s all_genes_summary ] ; then
			awk -v tracker="`cat tracker`" 'BEGIN{FS="\t";OFS="\t"}{gsub(/ /,"_",$0); print tracker,$1,$2}' \ 
			  all_genes_summary > $output_name_ranked_metrics 
		else 
		  	exit 0
		fi

		if [ -s all_genes_measures ] ; then
			awk -v tracker="`cat tracker`" 'BEGIN{FS="\t";OFS="\t"}{print tracker,$0}' all_genes_measures > $output_name_ranked_measures
		else 
		  	exit 0
		fi

	else 
		exit 0
	fi
}

rank_genes_production){
	# Input: seed_gens + kernel.
	# Output: rank genes for seed
	source ~soft_bio_267/initializes/init_netanalyzer
	source ~soft_bio_267/initializes/init_ruby
	if [ $method != "production" ] ; then
		exit 0
	fi
	echo -e "$param1_$kernel\t$param1\t$kernel" > tracker
	?
	ranker_gene.rb -k $folder_kernel_path/$input_name -n $folder_kernel_path/$input_name.lst -s $geneseeds
	number_of_all_candidates=`wc -l ranked_genes_all_candidates | cut -f1 -d " "`
    if [ $number_of_all_candidates -ge 1 ] ; then 
    	mv ranked_genes_all_candidates ranked_production_candidates
	else 
		exit 0
	fi
}
