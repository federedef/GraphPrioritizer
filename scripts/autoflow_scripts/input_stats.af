statistics_profiles){
	source ~soft_bio_267/initializes/init_python
	echo -e "$annotation" > tracker

	net2json_parser.py --net_id "$annotation" --json_path $net2custom > net_params
	source=`grep -P -w '^Source' net_params | cut -f 2`
	ontology=`grep -P -w '^Ontology' net_params | cut -f 2`
	format=`grep -P -w '^Format' net_params | cut -f 2`
	
	simil_code=`grep -P -w '^Layers' net_params | cut -f 2`

	#data=`grep -P '^$annotation' $net2custom | cut -f 2`
	ont_id=`grep -P '^$annotation' $net2custom | cut -f 3`
	exec_mode=`grep -P '^$annotation' $net2custom | cut -f 4`
	simil_code=`grep -P '^$annotation' $net2custom | cut -f 5`
	?


	net2json_parser.py --net_id "$annotation" --json_path $net2custom > net_params
	data=`grep -P -w '^Source' net_params | cut -f 2`
	format=`grep -P -w '^Format' net_params | cut -f 2`
	layers=`grep -P -w '^Layers' net_params | cut -f 2`
	ontology=`grep -P -w '^Ontology' net_params | cut -f 2`
	grep -o -w "\bterm_filter.*}" net_params | cut -f3 -d "'" > ontology_term
	?
	if [ "$layers" == "-" ] ; then
		summInfo_genetic_interaction.py -f $input_path/input_processed/$data > data_list
	    get_stats.py -d data_list > annotations_metrics
    else
    	if [ "$ontology" != "-" ] ; then
    		desaggregate_column_data.py -i $input_path/input_processed/$data -x 2 > ont_profs
    		netanalyzer.py -i ont_profs -f $format -l $layers  -O "ont:`semtools.py -d list | grep $ontology`" -
    	else
    		netanalyzer.py -i $input_path/input_processed/$source -f $format -l $layers --dsl_script dsl 
    	fi
    fi





















    if [ "$exec_mode" == "ontology" ] ; then
    	if [ $simil_code == "-" ] ; then 
			time semtools.py -i $input_path/input_processed/$data -o ./results.txt -O $ont_id -n -S "," > annotations_metrics
	    else
	    	time semtools.py -i $input_path/input_processed/$data -o ./results.txt -O $ont_id -n -S "," -c -T $simil_code > annotations_metrics
		fi
    else 
    	if [ "$data" == "pathway" -o "$data" == "protein_interaction" -o "$data" == "gene_hgncGroup" -o "$data" == "gene_TF" -o "$data" == "gene_PS" ] ; then
	    	sort -k1 $input_path/input_processed/$data| cut -f 1 | sort | uniq -c | awk '{print $1}' > data_list
	    elif [ "$data" == "genetic_interaction_effect" -o "$data" == "genetic_interaction_exprs" ] ; then
	    	summInfo_genetic_interaction.py -f $input_path/input_processed/$data > data_list
	    fi
	    get_stats.py -d data_list > annotations_metrics
    fi

	if [ -s annotations_metrics ] ; then 
		awk -v tracker="`cat tracker`" 'BEGIN{FS="\t";OFS="\t"}{gsub(/ /,"_",$0); print tracker,$1,$2}' annotations_metrics > tmp 
		mv tmp annotations_metrics
	else
		exit 1
	fi
}



