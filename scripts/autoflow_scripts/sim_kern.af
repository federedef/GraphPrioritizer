get_similarity){
	resources: -m '200gb' -t '4-00:00:00' -c 4
	# Input: Tab file in: paco format for ontologies, pairs format for network.
	# Output: Similarity list
	source ~soft_bio_267/initializes/init_python
	source ~/dev_py/myvenv/bin/activate
	source ~soft_bio_267/initializes/init_R
	export PATH=/mnt/home/users/bio_267_uma/federogc/dev_py/NetAnalyzer/bin:$PATH
	echo -e "$annotation_sim" > tracker
	similarity_path=`pwd`

	net2json_parser.py --net_id "$annotation" --json_path $net2custom > net_params
	source=`grep -P -w '^Source' net_params | cut -f 2`
	format=`grep -P -w '^Format' net_params | cut -f 2`
	layers=`grep -P -w '^Layers' net_params | cut -f 2`
	ontology=`grep -P -w '^Ontology' net_params | cut -f 2`
	node_files=`grep -P -w '^Node_list' net_params | cut -f 2 | awk -v prefix="$input_path/input_processed/" '{print prefix $0}' | tr -s '\n' ','`
	custom_parameters=`grep -P -w '^Custom' net_params | cut -f 2`
	grep -P -w '^Build_graph' net_params | cut -f 2 > dsl
	echo -e "$source" > tracker_annotation
	?
	if [ "$format" == "matrix" ] ; then
		netanalyzer.py -i $input_path/input_processed/$source -n $node_files -f $format -l $layers --both_repre_formats --dsl_script dsl
    else                                                                                                                                                  
    	if [ "$ontology" != "-" ] ; then
    		desaggregate_column_data.py -i $input_path/input_processed/$source -x 2 > ont_profs
    		netanalyzer.py -i ont_profs -f $format -l $layers -T [cpu] -O "ont:`semtools.py -d list | grep $ontology`" --dsl_script dsl 
    	else
    		netanalyzer.py -i $input_path/input_processed/$source -f $format -l $layers --dsl_script dsl
    		cp preproc_metrics eyyyyyyyyyyyyyyyy 
    	fi
    fi
    cut -f 2,3 preproc_metrics > tmp
    cp preproc_metrics original_preproc_metrics
    mv tmp preproc_metrics
    mv similarity_matrix_bin_rowIds similarity_matrix_bin.lst


	if [ -s stats_from_matrix -a preproc_metrics ] ; then 
		awk -v tracker="`cat tracker`" 'BEGIN{FS="\t";OFS="\t"}{gsub(/ - /,"_",$1); gsub(/ /,"_",$0); print tracker,$1,$2}' stats_from_matrix > similarity_metrics
		head -n 11 preproc_metrics > tmp && mv tmp preproc_metrics
		awk -v tracker="`cat tracker_annotation`" 'BEGIN{FS="\t";OFS="\t"}{gsub(/ /,"_",$0); print tracker,$1,$2}' preproc_metrics > annotations_metrics
	else
		exit 1
	fi
}


%filter_net){
	resources: -m '20gb' -t '0-00:10:00'
	source ~soft_bio_267/initializes/init_python
	source ~/dev_py/myvenv/bin/activate
	echo -e "$annotation_sim" > tracker
	net2json_parser.py --net_id "$annotation" --json_path $net2custom > net_params
	grep -P -w '^Filter' net_params | cut -f 2 > dsl_filter
	cp get_similarity)/similarity_matrix_bin.lst ./similarity_matrix_bin.lst
	if [ -s stats_from_matrix ] ;then
		rm stats_from_matrix
	fi
	?
	if [ -s dsl_filter ] ; then
		echo "filtering matrix"
    	netanalyzer.py -i get_similarity)/similarity_matrix_bin.npy -f "bin" -l "gene" -n similarity_matrix_bin.lst --dsl_script dsl_filter
		mv similarity_matrix_bin_rowIds similarity_matrix_bin.lst
	else 
		echo "Not filtering matrix"
		ln -sf get_similarity)/similarity_matrix_bin.npy ./similarity_matrix_bin.npy
    fi

    if [ -s stats_from_matrix ] ; then 
			awk -v tracker="`cat tracker`" 'BEGIN{FS="\t";OFS="\t"}{gsub(/ - /,"_",$1); gsub(/ /,"_",$0); print tracker,$1,$2}' stats_from_matrix > filtered_similarity_metrics
	fi

    if [ ! -s similarity_matrix_bin.npy ] ; then
    	exit 1
    fi
}


%calc_kernel_[$kernels_varflow]){
	resources: -c 16 -m '240gb' -t '2-00:00:00'
	# input: Similarity binary matrix
	# output: binary Kernel from similarity matrix + metrics
	# source ~soft_bio_267/initializes/init_netanalyzer
	source ~soft_bio_267/initializes/init_python
	source ~/dev_py/myvenv/bin/activate
	#export PATH=/mnt/home/users/bio_267_uma/federogc/dev_py/NetAnalyzer/bin:$PATH
	echo -e "$annotation_(*)\t$annotation\t(*)" > tracker
	cp filter_net)/similarity_matrix_bin.lst kernel_matrix_bin.lst # To pass the list of node names.
	kern_net_path=`pwd`
	export OMP_NUM_THREADS=[cpu]
	if [ -s ugot_path ] ; then
		rm ugot_path
	fi
	if [ -s kernel_matrix_bin ] ; then
		rm kernel_matrix_bin
	fi
	?
	if [ "(*)" == "node2vec" ] ; then
		#nod2vec.py -i filter_net)/similarity_matrix_bin.npy 
		netanalyzer.py -i filter_net)/similarity_matrix_bin.npy -f bin -l 'genes' -k (*) -n kernel_matrix_bin.lst -u 'genes' -K ./kernel_matrix_bin --both_repre_formats                                                           
	else
		netanalyzer.py -i filter_net)/similarity_matrix_bin.npy -f bin -l 'genes' -k (*) -n kernel_matrix_bin.lst -u 'genes' -K ./kernel_matrix_bin
	fi

	if [ -s kernel_matrix_bin.npy ] ; then
		echo -e "$annotation_(*)\t$annotation\t(*)\t$kern_net_path" > ugot_path 
	else 
  		exit 1
  	fi
}

%stats_kernels_[$kernels_varflow]){
	resources: -m '120gb' -t '1-00:00:00'
	source ~soft_bio_267/initializes/init_python
	source ~/dev_py/myvenv/bin/activate
	#export PATH=/mnt/home/users/bio_267_uma/federogc/dev_gems/NetAnalyzer/bin:$PATH
	if [ -s tracker ] ; then
		rm tracker
		# TODO: Remove this part and check
	fi
	if [ -s kernel_metrics ] ; then
		rm kernel_metrics
	fi
	ln -s !calc_kernel_*!/tracker
	?
	text2binary_matrix.py -i !calc_kernel_*!/kernel_matrix_bin.npy -o kernel_matrix_undo -t bin -s kernel_metrics
	if [ -s kernel_metrics ] ; then
		rm kernel_matrix_undo.npy
		awk -v tracker="`cat tracker`" 'BEGIN{FS="\t";OFS="\t"}{gsub(/ - /,"_",$1); gsub(/ /,"_",$0); print tracker,$1,$2}' kernel_metrics > uncomb_kernel_metrics
	else 
  		exit 1
  	fi
}