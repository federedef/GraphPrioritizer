%extract_subgraphs_[$seed_group_names]){
	resources: -m '120gb' 
	source ~soft_bio_267/initializes/init_python
	grep -w "(*)" $production_seedgens > seed_by_group
	?
	extract_subgraph.py -i $folder_kernel_path/$input_name  -n $folder_kernel_path/$input_name.lst -s seed_by_group 
	if ! [ -s "(*)_subgraph" ] ; then
		exit 0
	fi
}

%get_clusters_[$seed_group_names]){
	resources: -m '120gb' 
	source ~soft_bio_267/initializes/init_python
	grep -w "(*)" $production_seedgens | cut -f2 | tr -s "," "\n" | awk 'BEGIN{OFS="\t"}{print "All",$1}' > seed
	echo "!extract_subgraphs_*!/G1_subgraph" > ey
	?
	cdlib_clusterize.py -i !extract_subgraphs_*!/(*)_subgraph -m rber_pots -o clusters
	cat seed clusters > all_groups
	sed -i -e 's/^/(*)_/' all_groups
	if [ -s all_groups ] ; then
		aggregate_column_data.rb -i all_groups -x 0 -a 1 > all_groups_aggregated
	else
		exit 0
	fi
}

get_metrics){
	resources: -m '200gb' 
	source ~soft_bio_267/initializes/init_python
	cat !get_clusters_!/all_groups > all_groups
	cat !get_clusters_!/all_groups_aggregated > all_groups_aggregated
	?
	cdlib_clusterize.py -i $folder_kernel_path/$input_name -n $folder_kernel_path/$input_name.lst -t "matrix" -e all_groups -m external -g
}


